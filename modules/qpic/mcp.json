{
  "name": "qpic",
  "version": "2.0.0",
  "description": "Media Management module with transcoding, optimization, and marketplace integration",
  "tools": [
    {
      "name": "qpic.upload",
      "description": "Upload media files with automatic metadata extraction and privacy protection",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Media file to upload"
          },
          "filename": {
            "type": "string",
            "description": "Original filename"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata to associate with the file",
            "properties": {
              "title": {
                "type": "string",
                "description": "Media title"
              },
              "description": {
                "type": "string",
                "description": "Media description"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Media tags"
              },
              "category": {
                "type": "string",
                "description": "Media category"
              },
              "license": {
                "type": "string",
                "enum": ["CC0", "CC-BY", "CC-BY-SA", "CC-BY-NC", "CC-BY-ND", "CC-BY-NC-SA", "CC-BY-NC-ND", "PROPRIETARY"],
                "description": "Media license type"
              }
            },
            "additionalProperties": true
          },
          "privacyProfile": {
            "type": "string",
            "description": "Privacy profile to apply (via Qmask)"
          },
          "options": {
            "type": "object",
            "properties": {
              "extractMetadata": {
                "type": "boolean",
                "default": true,
                "description": "Whether to extract technical metadata"
              },
              "generateThumbnails": {
                "type": "boolean",
                "default": true,
                "description": "Whether to generate thumbnails"
              },
              "virusScan": {
                "type": "boolean",
                "default": true,
                "description": "Whether to perform virus scanning"
              },
              "autoTranscode": {
                "type": "boolean",
                "default": false,
                "description": "Whether to automatically transcode to web formats"
              }
            }
          }
        },
        "required": ["file", "filename"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "mediaId": {
            "type": "string",
            "description": "Unique media identifier"
          },
          "cid": {
            "type": "string",
            "description": "IPFS Content Identifier"
          },
          "metadata": {
            "type": "object",
            "description": "Extracted and processed metadata"
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "size": {
                  "type": "string"
                },
                "cid": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "description": "Generated thumbnails"
          },
          "formats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string"
                },
                "cid": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                }
              }
            },
            "description": "Available formats"
          },
          "privacyApplied": {
            "type": "boolean",
            "description": "Whether privacy profile was applied"
          },
          "indexed": {
            "type": "boolean",
            "description": "Whether media was indexed in Qindex"
          }
        }
      }
    },
    {
      "name": "qpic.transcode",
      "description": "Transcode media to different formats and quality levels",
      "inputSchema": {
        "type": "object",
        "properties": {
          "mediaId": {
            "type": "string",
            "description": "Media identifier to transcode"
          },
          "profiles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Profile name"
                },
                "format": {
                  "type": "string",
                  "enum": ["mp4", "webm", "jpg", "webp", "avif", "mp3", "aac", "opus"],
                  "description": "Output format"
                },
                "quality": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "ultra"],
                  "description": "Quality level"
                },
                "resolution": {
                  "type": "string",
                  "description": "Resolution (e.g., '1920x1080', '720p')"
                },
                "bitrate": {
                  "type": "string",
                  "description": "Bitrate (e.g., '2000k', '128k')"
                },
                "options": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Additional transcoding options"
                }
              },
              "required": ["name", "format"]
            },
            "description": "Transcoding profiles to apply"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "normal", "high", "urgent"],
            "default": "normal",
            "description": "Processing priority"
          }
        },
        "required": ["mediaId", "profiles"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "Transcoding job identifier"
          },
          "status": {
            "type": "string",
            "enum": ["queued", "processing", "completed", "failed"],
            "description": "Job status"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "profile": {
                  "type": "string"
                },
                "cid": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "duration": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                }
              }
            },
            "description": "Transcoding results"
          },
          "estimatedTime": {
            "type": "number",
            "description": "Estimated completion time in seconds"
          }
        }
      }
    },
    {
      "name": "qpic.optimize",
      "description": "Optimize media for delivery with caching and CDN distribution",
      "inputSchema": {
        "type": "object",
        "properties": {
          "mediaId": {
            "type": "string",
            "description": "Media identifier to optimize"
          },
          "optimizations": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["compress", "resize", "format-convert", "cdn-distribute", "cache-warm", "thumbnail-generate"]
            },
            "description": "Optimization operations to perform"
          },
          "targets": {
            "type": "object",
            "properties": {
              "web": {
                "type": "boolean",
                "description": "Optimize for web delivery"
              },
              "mobile": {
                "type": "boolean",
                "description": "Optimize for mobile devices"
              },
              "print": {
                "type": "boolean",
                "description": "Optimize for print quality"
              },
              "streaming": {
                "type": "boolean",
                "description": "Optimize for streaming"
              }
            }
          },
          "cacheStrategy": {
            "type": "string",
            "enum": ["aggressive", "normal", "conservative", "none"],
            "default": "normal",
            "description": "Caching strategy"
          }
        },
        "required": ["mediaId", "optimizations"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "optimizedVersions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                },
                "cid": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "compressionRatio": {
                  "type": "number"
                },
                "cached": {
                  "type": "boolean"
                }
              }
            },
            "description": "Optimized versions created"
          },
          "cdnDistributed": {
            "type": "boolean",
            "description": "Whether content was distributed to CDN"
          },
          "cacheWarmed": {
            "type": "boolean",
            "description": "Whether cache was pre-warmed"
          },
          "totalSavings": {
            "type": "object",
            "properties": {
              "sizeReduction": {
                "type": "number",
                "description": "Size reduction percentage"
              },
              "bandwidthSavings": {
                "type": "number",
                "description": "Estimated bandwidth savings"
              }
            }
          }
        }
      }
    },
    {
      "name": "qpic.metadata",
      "description": "Extract, manage, and update media metadata",
      "inputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["extract", "update", "get", "remove"],
            "description": "Metadata operation to perform"
          },
          "mediaId": {
            "type": "string",
            "description": "Media identifier"
          },
          "metadata": {
            "type": "object",
            "description": "Metadata to update (for update action)",
            "additionalProperties": true
          },
          "extractionOptions": {
            "type": "object",
            "properties": {
              "includeTechnical": {
                "type": "boolean",
                "default": true,
                "description": "Include technical metadata (EXIF, etc.)"
              },
              "includeGeolocation": {
                "type": "boolean",
                "default": false,
                "description": "Include geolocation data"
              },
              "includePersonalData": {
                "type": "boolean",
                "default": false,
                "description": "Include personal data in metadata"
              },
              "applyPrivacyProfile": {
                "type": "string",
                "description": "Privacy profile to apply during extraction"
              }
            }
          }
        },
        "required": ["action", "mediaId"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "technical": {
                "type": "object",
                "description": "Technical metadata (dimensions, format, etc.)"
              },
              "descriptive": {
                "type": "object",
                "description": "Descriptive metadata (title, description, tags)"
              },
              "rights": {
                "type": "object",
                "description": "Rights and licensing information"
              },
              "provenance": {
                "type": "object",
                "description": "Creation and modification history"
              }
            }
          },
          "privacyApplied": {
            "type": "boolean",
            "description": "Whether privacy filtering was applied"
          },
          "extractedFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of metadata fields extracted"
          }
        }
      }
    },
    {
      "name": "qpic.license",
      "description": "Create and manage media licenses for marketplace integration",
      "inputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["create", "update", "get", "revoke", "transfer"],
            "description": "License operation to perform"
          },
          "mediaId": {
            "type": "string",
            "description": "Media identifier"
          },
          "licenseData": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["exclusive", "non-exclusive", "royalty-free", "rights-managed", "creative-commons"],
                "description": "License type"
              },
              "usage": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["commercial", "editorial", "personal", "educational", "non-profit"]
                },
                "description": "Allowed usage types"
              },
              "territory": {
                "type": "string",
                "description": "Geographic territory (e.g., 'worldwide', 'US', 'EU')"
              },
              "duration": {
                "type": "string",
                "description": "License duration (e.g., '1 year', 'perpetual')"
              },
              "price": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "restrictions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Usage restrictions"
              },
              "attribution": {
                "type": "object",
                "properties": {
                  "required": {
                    "type": "boolean"
                  },
                  "text": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "licensee": {
            "type": "string",
            "description": "Licensee identity (for create/transfer actions)"
          }
        },
        "required": ["action", "mediaId"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string",
            "description": "License identifier"
          },
          "status": {
            "type": "string",
            "enum": ["active", "expired", "revoked", "pending"],
            "description": "License status"
          },
          "license": {
            "type": "object",
            "description": "Complete license information"
          },
          "marketplaceListed": {
            "type": "boolean",
            "description": "Whether license was listed in marketplace"
          },
          "contractCid": {
            "type": "string",
            "description": "IPFS CID of license contract"
          }
        }
      }
    }
  ],
  "server": {
    "host": "localhost",
    "port": 3008,
    "basePath": "/mcp/v1"
  },
  "authentication": {
    "type": "bearer",
    "description": "sQuid identity token required"
  }
}
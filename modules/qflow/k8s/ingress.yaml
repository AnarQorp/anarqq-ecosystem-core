apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qflow-ingress
  namespace: qflow
  labels:
    app.kubernetes.io/name: qflow
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - qflow.example.com
    - api.qflow.example.com
    secretName: qflow-tls
  rules:
  - host: qflow.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qflow-service
            port:
              number: 8080
  - host: api.qflow.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: qflow-service
            port:
              number: 8080
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: qflow-service
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qflow-websocket-ingress
  namespace: qflow
  labels:
    app.kubernetes.io/name: qflow
    app.kubernetes.io/component: websocket-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "qflow-service"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ws.qflow.example.com
    secretName: qflow-websocket-tls
  rules:
  - host: ws.qflow.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qflow-service
            port:
              number: 9090
name: Documentation Health Monitoring

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'modules/**'
      - 'scripts/**'

jobs:
  monitor-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run documentation KPI tracking
      run: npm run docs:monitor:kpis
    
    - name: Generate KPI report
      run: node scripts/docs-kpi-tracker.mjs report
    
    - name: Run master index validation
      run: npm run docs:index:validate
    
    - name: Upload monitoring reports
      uses: actions/upload-artifact@v3
      with:
        name: docs-monitoring-reports
        path: |
          docs/kpi-report.json
          docs/kpi-report.md
          docs/index-validation-report.json
    
    - name: Check for critical issues
      run: |
        if [ -f docs/kpi-report.json ]; then
          OVERALL_SCORE=$(cat docs/kpi-report.json | jq '.summary.overallScore')
          ALERTS_COUNT=$(cat docs/kpi-report.json | jq '.alerts | length')
          
          echo "Overall Score: $OVERALL_SCORE%"
          echo "Alerts Count: $ALERTS_COUNT"
          
          if [ "$OVERALL_SCORE" -lt 70 ]; then
            echo "::error::Documentation health score is below 70% ($OVERALL_SCORE%)"
            exit 1
          fi
          
          if [ "$ALERTS_COUNT" -gt 5 ]; then
            echo "::warning::High number of documentation alerts ($ALERTS_COUNT)"
          fi
        fi
    
    - name: Create issue for critical health problems
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let reportContent = '';
          if (fs.existsSync('docs/kpi-report.md')) {
            reportContent = fs.readFileSync('docs/kpi-report.md', 'utf8');
          }
          
          const issueBody = `## Critical Documentation Health Issues Detected

The automated documentation monitoring system has detected critical issues that require immediate attention.

${reportContent}

### Next Steps
1. Review the detailed KPI report above
2. Address critical alerts first
3. Implement recommended improvements
4. Re-run monitoring to verify fixes

This issue was automatically created by the documentation monitoring system.
Please review and address the issues listed above.

**Monitoring Run:** ${context.runId}
**Triggered by:** ${context.eventName}
**Branch:** ${context.ref}`;

          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Critical Documentation Health Issues - Score Below 70%`,
            body: issueBody,
            labels: ['documentation', 'critical', 'automated', 'health-monitoring']
          });
    
    - name: Comment on PR with monitoring results
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('docs/kpi-report.json')) {
            const report = JSON.parse(fs.readFileSync('docs/kpi-report.json', 'utf8'));
            
            const comment = `## ðŸ“Š Documentation Health Report

**Overall Score:** ${report.summary.overallScore}% (${report.summary.healthStatus})

### Key Metrics
- **Completeness:** ${report.summary.keyMetrics.completeness}
- **Link Health:** ${report.summary.keyMetrics.linkHealth}
- **Content Coverage:** ${report.summary.keyMetrics.contentCoverage}
- **Bilingual Parity:** ${report.summary.keyMetrics.bilingualParity}
- **Pending Reviews:** ${report.summary.keyMetrics.pendingReviews}

${report.alerts.length > 0 ? `### ðŸš¨ Alerts (${report.alerts.length})
${report.alerts.map(alert => `- **${alert.type.toUpperCase()}:** ${alert.message}`).join('\n')}` : 'âœ… No alerts'}

*This report was automatically generated by the documentation monitoring system.*`;

            // Find the PR associated with this push
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });

            if (pulls.data.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pulls.data[0].number,
                body: comment
              });
            }
          }